import { NextApiRequest, NextApiResponse } from 'next';
import dbConnect from '../../../lib/mongodb';
import clientPromise from '../../../lib/mongodbClient'; // Make sure clientPromise is properly defined
import { InsertOneResult } from 'mongodb';s

type Data = {
  message: string;
  result?: InsertOneResult<Document>;
  error?: Error;
};
export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  console.log("API handler reached with method:", req.method);

  if (req.method === 'POST') {
    res.status(200).json({ message: "Data received" });
  } else {
    res.status(405).json({ message: "Method not allowed" });
  }
}

// export default async function handler(req: NextApiRequest, res: NextApiResponse<Data>) {
//   if (req.method === 'POST') {
//     try {
//       // Connect to the database
//       await dbConnect();

//       // Get the collection and insert data
//       const { name, qty, price } = req.body as { name: string; qty: number; price: number };
//       console.log(req.body);

//       const client = await clientPromise;
//       const db = client.db("storeapp");
//       const collection = db.collection("storeapp");

//       // Insert form data into the collection
//       const result = await collection.insertOne({ name, qty, price });

//       // Send response back to client
//       res.status(200).json({ message: 'Document created successfully!', result });
//     } catch (error) {
//       // Check if error is an instance of Error to safely access the message
//       if (error instanceof Error) {
//         res.status(500).json({ message: 'Error creating document', error });
//       } else {
//         // If it's not an instance of Error, convert it to a string
//         res.status(500).json({ message: 'Error creating document', error: new Error(String(error)) });
//       }
//     }
//   } else {
//     res.status(405).json({ message: 'Method not allowed' });
//   }
}
